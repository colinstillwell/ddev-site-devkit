#!/usr/bin/env bash

#ddev-generated
## Command provided by https://github.com/colinstillwell/ddev-site-devkit
## Description: Get a config value by name from a given format and location.
## Usage: devkit-config-get [flags]
## Example: ddev devkit-config-get --name="EXAMPLE" --format="env" --location="web"
## Flags: [{"Name":"name","Usage":"The name of the variable to get the value for","Type":"string"},{"Name":"format","Usage":"How to interpret the location","Type":"string"},{"Name":"location","Usage":"Where to read from","Type":"string"},{"Name":"default","Usage":"Default value if not found","Type":"string"}]
## Aliases: devkit:config:get,devkit-get-config,devkit:get:config

# Exit on error; treat unset variables as errors; fail pipelines if any command fails
set -euo pipefail

# Defaults
NAME=""
FORMAT=""
LOCATION=""
DEFAULT=""

# Parse flags
for ARG in "$@"; do
  case "$ARG" in
    --name=*)     NAME="${ARG#*=}"; shift; continue ;;
    --format=*)   FORMAT="${ARG#*=}"; shift; continue ;;
    --location=*) LOCATION="${ARG#*=}"; shift; continue ;;
    --default=*)  DEFAULT="${ARG#*=}"; shift; continue ;;
    *) ddev devkit-log --message="Unknown flag: $ARG" --type="error"; exit 2 ;;
  esac
done

# Validate flags
[[ -n "$NAME" ]]     || { ddev devkit-log --message="--name is required." --type="error"; exit 2; }
[[ -n "$FORMAT" ]]   || { ddev devkit-log --message="--format is required." --type="error"; exit 2; }
[[ -n "$LOCATION" ]] || { ddev devkit-log --message="--location is required." --type="error"; exit 2; }

# Guards
if [[ "$FORMAT" != "env" ]]; then
  ddev devkit-log --message="Unsupported --format '$FORMAT'. Only 'env' is supported for now." --type="error"
  exit 2
fi

if [[ "$LOCATION" != "host" ]]; then
  if ! ddev exec -s "$LOCATION" bash -lc 'true' > /dev/null 2>&1; then
    ddev devkit-log --message="Service '$LOCATION' not found or not running." --type="error"
    exit 1
  fi
fi

# Commands
VALUE="$(ddev exec -s "$LOCATION" printenv "$NAME" 2> /dev/null || true)"

if [[ -z "$VALUE" ]]; then
  if [[ -n "$DEFAULT" ]]; then
    ddev devkit-log --message="No '$FORMAT' value found for '$NAME' in '$LOCATION', using default." --type="warning"
    VALUE="$DEFAULT"
  else
    ddev devkit-log --message="No '$FORMAT' value found for '$NAME' in '$LOCATION'." --type="error"
    exit 1
  fi
fi

printf '%s\n' "$VALUE"
